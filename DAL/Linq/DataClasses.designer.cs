#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="2-sem-gr-2")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProject_Message_Line(Project_Message_Line instance);
    partial void UpdateProject_Message_Line(Project_Message_Line instance);
    partial void DeleteProject_Message_Line(Project_Message_Line instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjects_Specialisation_Line(Projects_Specialisation_Line instance);
    partial void UpdateProjects_Specialisation_Line(Projects_Specialisation_Line instance);
    partial void DeleteProjects_Specialisation_Line(Projects_Specialisation_Line instance);
    partial void InsertSpecialisation(Specialisation instance);
    partial void UpdateSpecialisation(Specialisation instance);
    partial void DeleteSpecialisation(Specialisation instance);
    partial void InsertSpecialisations_Line(Specialisations_Line instance);
    partial void UpdateSpecialisations_Line(Specialisations_Line instance);
    partial void DeleteSpecialisations_Line(Specialisations_Line instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertInvite(Invite instance);
    partial void UpdateInvite(Invite instance);
    partial void DeleteInvite(Invite instance);
    partial void InsertConsultant_Line(Consultant_Line instance);
    partial void UpdateConsultant_Line(Consultant_Line instance);
    partial void DeleteConsultant_Line(Consultant_Line instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    #endregion
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Project_Message_Line> Project_Message_Lines
		{
			get
			{
				return this.GetTable<Project_Message_Line>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Projects_Specialisation_Line> Projects_Specialisation_Lines
		{
			get
			{
				return this.GetTable<Projects_Specialisation_Line>();
			}
		}
		
		public System.Data.Linq.Table<Specialisation> Specialisations
		{
			get
			{
				return this.GetTable<Specialisation>();
			}
		}
		
		public System.Data.Linq.Table<Specialisations_Line> Specialisations_Lines
		{
			get
			{
				return this.GetTable<Specialisations_Line>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Invite> Invites
		{
			get
			{
				return this.GetTable<Invite>();
			}
		}
		
		public System.Data.Linq.Table<Consultant_Line> Consultant_Lines
		{
			get
			{
				return this.GetTable<Consultant_Line>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateProjectStatusForAll")]
		public int UpdateProjectStatusForAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Message_Line")]
	public partial class Project_Message_Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Message_ID;
		
		private System.Nullable<int> _Project_ID;
		
		private System.Nullable<int> _User_ID;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _Message_Date;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessage_IDChanging(int value);
    partial void OnMessage_IDChanged();
    partial void OnProject_IDChanging(System.Nullable<int> value);
    partial void OnProject_IDChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnMessage_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnMessage_DateChanged();
    #endregion
		
		public Project_Message_Line()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Message_ID
		{
			get
			{
				return this._Message_ID;
			}
			set
			{
				if ((this._Message_ID != value))
				{
					this.OnMessage_IDChanging(value);
					this.SendPropertyChanging();
					this._Message_ID = value;
					this.SendPropertyChanged("Message_ID");
					this.OnMessage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", DbType="Int")]
		public System.Nullable<int> Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(255)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Message_Date
		{
			get
			{
				return this._Message_Date;
			}
			set
			{
				if ((this._Message_Date != value))
				{
					this.OnMessage_DateChanging(value);
					this.SendPropertyChanging();
					this._Message_Date = value;
					this.SendPropertyChanged("Message_Date");
					this.OnMessage_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Message_Line", Storage="_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Project_Message_Lines.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Project_Message_Lines.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Project_Message_Line", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Project_Message_Lines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Project_Message_Lines.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_ID;
		
		private int _User_ID;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Project_Start_Date;
		
		private System.Nullable<System.DateTime> _Project_End_Date;
		
		private System.Nullable<System.DateTime> _Project_Modify_Date;
		
		private string _Project_Status;
		
		private string _Description;
		
		private EntitySet<Project_Message_Line> _Project_Message_Lines;
		
		private EntitySet<Projects_Specialisation_Line> _Projects_Specialisation_Lines;
		
		private EntitySet<Invite> _Invites;
		
		private EntitySet<Consultant_Line> _Consultant_Lines;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IDChanging(int value);
    partial void OnProject_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnProject_Start_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnProject_Start_DateChanged();
    partial void OnProject_End_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnProject_End_DateChanged();
    partial void OnProject_Modify_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnProject_Modify_DateChanged();
    partial void OnProject_StatusChanging(string value);
    partial void OnProject_StatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Project()
		{
			this._Project_Message_Lines = new EntitySet<Project_Message_Line>(new Action<Project_Message_Line>(this.attach_Project_Message_Lines), new Action<Project_Message_Line>(this.detach_Project_Message_Lines));
			this._Projects_Specialisation_Lines = new EntitySet<Projects_Specialisation_Line>(new Action<Projects_Specialisation_Line>(this.attach_Projects_Specialisation_Lines), new Action<Projects_Specialisation_Line>(this.detach_Projects_Specialisation_Lines));
			this._Invites = new EntitySet<Invite>(new Action<Invite>(this.attach_Invites), new Action<Invite>(this.detach_Invites));
			this._Consultant_Lines = new EntitySet<Consultant_Line>(new Action<Consultant_Line>(this.attach_Consultant_Lines), new Action<Consultant_Line>(this.detach_Consultant_Lines));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(25)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Start_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Project_Start_Date
		{
			get
			{
				return this._Project_Start_Date;
			}
			set
			{
				if ((this._Project_Start_Date != value))
				{
					this.OnProject_Start_DateChanging(value);
					this.SendPropertyChanging();
					this._Project_Start_Date = value;
					this.SendPropertyChanged("Project_Start_Date");
					this.OnProject_Start_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_End_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Project_End_Date
		{
			get
			{
				return this._Project_End_Date;
			}
			set
			{
				if ((this._Project_End_Date != value))
				{
					this.OnProject_End_DateChanging(value);
					this.SendPropertyChanging();
					this._Project_End_Date = value;
					this.SendPropertyChanged("Project_End_Date");
					this.OnProject_End_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Modify_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Project_Modify_Date
		{
			get
			{
				return this._Project_Modify_Date;
			}
			set
			{
				if ((this._Project_Modify_Date != value))
				{
					this.OnProject_Modify_DateChanging(value);
					this.SendPropertyChanging();
					this._Project_Modify_Date = value;
					this.SendPropertyChanged("Project_Modify_Date");
					this.OnProject_Modify_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Status", DbType="VarChar(25)")]
		public string Project_Status
		{
			get
			{
				return this._Project_Status;
			}
			set
			{
				if ((this._Project_Status != value))
				{
					this.OnProject_StatusChanging(value);
					this.SendPropertyChanging();
					this._Project_Status = value;
					this.SendPropertyChanged("Project_Status");
					this.OnProject_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Message_Line", Storage="_Project_Message_Lines", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<Project_Message_Line> Project_Message_Lines
		{
			get
			{
				return this._Project_Message_Lines;
			}
			set
			{
				this._Project_Message_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Projects_Specialisation_Line", Storage="_Projects_Specialisation_Lines", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<Projects_Specialisation_Line> Projects_Specialisation_Lines
		{
			get
			{
				return this._Projects_Specialisation_Lines;
			}
			set
			{
				this._Projects_Specialisation_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Invite", Storage="_Invites", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<Invite> Invites
		{
			get
			{
				return this._Invites;
			}
			set
			{
				this._Invites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Consultant_Line", Storage="_Consultant_Lines", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<Consultant_Line> Consultant_Lines
		{
			get
			{
				return this._Consultant_Lines;
			}
			set
			{
				this._Consultant_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Invoice", Storage="_Invoices", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Project", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Project_Message_Lines(Project_Message_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Project_Message_Lines(Project_Message_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Projects_Specialisation_Lines(Projects_Specialisation_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Projects_Specialisation_Lines(Projects_Specialisation_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Invites(Invite entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Invites(Invite entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects_Specialisation_Line")]
	public partial class Projects_Specialisation_Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_ID;
		
		private int _Spec_Id;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Specialisation> _Specialisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IDChanging(int value);
    partial void OnProject_IDChanged();
    partial void OnSpec_IdChanging(int value);
    partial void OnSpec_IdChanged();
    #endregion
		
		public Projects_Specialisation_Line()
		{
			this._Project = default(EntityRef<Project>);
			this._Specialisation = default(EntityRef<Specialisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Spec_Id
		{
			get
			{
				return this._Spec_Id;
			}
			set
			{
				if ((this._Spec_Id != value))
				{
					if (this._Specialisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpec_IdChanging(value);
					this.SendPropertyChanging();
					this._Spec_Id = value;
					this.SendPropertyChanged("Spec_Id");
					this.OnSpec_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Projects_Specialisation_Line", Storage="_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Projects_Specialisation_Lines.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Projects_Specialisation_Lines.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialisation_Projects_Specialisation_Line", Storage="_Specialisation", ThisKey="Spec_Id", OtherKey="Spec_Id", IsForeignKey=true)]
		public Specialisation Specialisation
		{
			get
			{
				return this._Specialisation.Entity;
			}
			set
			{
				Specialisation previousValue = this._Specialisation.Entity;
				if (((previousValue != value) 
							|| (this._Specialisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specialisation.Entity = null;
						previousValue.Projects_Specialisation_Lines.Remove(this);
					}
					this._Specialisation.Entity = value;
					if ((value != null))
					{
						value.Projects_Specialisation_Lines.Add(this);
						this._Spec_Id = value.Spec_Id;
					}
					else
					{
						this._Spec_Id = default(int);
					}
					this.SendPropertyChanged("Specialisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specialisations")]
	public partial class Specialisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Spec_Id;
		
		private string _Specialisation1;
		
		private string _Description;
		
		private EntitySet<Projects_Specialisation_Line> _Projects_Specialisation_Lines;
		
		private EntitySet<Specialisations_Line> _Specialisations_Lines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpec_IdChanging(int value);
    partial void OnSpec_IdChanged();
    partial void OnSpecialisation1Changing(string value);
    partial void OnSpecialisation1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Specialisation()
		{
			this._Projects_Specialisation_Lines = new EntitySet<Projects_Specialisation_Line>(new Action<Projects_Specialisation_Line>(this.attach_Projects_Specialisation_Lines), new Action<Projects_Specialisation_Line>(this.detach_Projects_Specialisation_Lines));
			this._Specialisations_Lines = new EntitySet<Specialisations_Line>(new Action<Specialisations_Line>(this.attach_Specialisations_Lines), new Action<Specialisations_Line>(this.detach_Specialisations_Lines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Spec_Id
		{
			get
			{
				return this._Spec_Id;
			}
			set
			{
				if ((this._Spec_Id != value))
				{
					this.OnSpec_IdChanging(value);
					this.SendPropertyChanging();
					this._Spec_Id = value;
					this.SendPropertyChanged("Spec_Id");
					this.OnSpec_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Specialisation", Storage="_Specialisation1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialisation1
		{
			get
			{
				return this._Specialisation1;
			}
			set
			{
				if ((this._Specialisation1 != value))
				{
					this.OnSpecialisation1Changing(value);
					this.SendPropertyChanging();
					this._Specialisation1 = value;
					this.SendPropertyChanged("Specialisation1");
					this.OnSpecialisation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialisation_Projects_Specialisation_Line", Storage="_Projects_Specialisation_Lines", ThisKey="Spec_Id", OtherKey="Spec_Id")]
		public EntitySet<Projects_Specialisation_Line> Projects_Specialisation_Lines
		{
			get
			{
				return this._Projects_Specialisation_Lines;
			}
			set
			{
				this._Projects_Specialisation_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialisation_Specialisations_Line", Storage="_Specialisations_Lines", ThisKey="Spec_Id", OtherKey="Spec_Id")]
		public EntitySet<Specialisations_Line> Specialisations_Lines
		{
			get
			{
				return this._Specialisations_Lines;
			}
			set
			{
				this._Specialisations_Lines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects_Specialisation_Lines(Projects_Specialisation_Line entity)
		{
			this.SendPropertyChanging();
			entity.Specialisation = this;
		}
		
		private void detach_Projects_Specialisation_Lines(Projects_Specialisation_Line entity)
		{
			this.SendPropertyChanging();
			entity.Specialisation = null;
		}
		
		private void attach_Specialisations_Lines(Specialisations_Line entity)
		{
			this.SendPropertyChanging();
			entity.Specialisation = this;
		}
		
		private void detach_Specialisations_Lines(Specialisations_Line entity)
		{
			this.SendPropertyChanging();
			entity.Specialisation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specialisations_Line")]
	public partial class Specialisations_Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private int _Spec_Id;
		
		private EntityRef<Specialisation> _Specialisation;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnSpec_IdChanging(int value);
    partial void OnSpec_IdChanged();
    #endregion
		
		public Specialisations_Line()
		{
			this._Specialisation = default(EntityRef<Specialisation>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Spec_Id
		{
			get
			{
				return this._Spec_Id;
			}
			set
			{
				if ((this._Spec_Id != value))
				{
					if (this._Specialisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpec_IdChanging(value);
					this.SendPropertyChanging();
					this._Spec_Id = value;
					this.SendPropertyChanged("Spec_Id");
					this.OnSpec_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialisation_Specialisations_Line", Storage="_Specialisation", ThisKey="Spec_Id", OtherKey="Spec_Id", IsForeignKey=true)]
		public Specialisation Specialisation
		{
			get
			{
				return this._Specialisation.Entity;
			}
			set
			{
				Specialisation previousValue = this._Specialisation.Entity;
				if (((previousValue != value) 
							|| (this._Specialisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specialisation.Entity = null;
						previousValue.Specialisations_Lines.Remove(this);
					}
					this._Specialisation.Entity = value;
					if ((value != null))
					{
						value.Specialisations_Lines.Add(this);
						this._Spec_Id = value.Spec_Id;
					}
					else
					{
						this._Spec_Id = default(int);
					}
					this.SendPropertyChanged("Specialisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Specialisations_Line", Storage="_User", ThisKey="User_Id", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Specialisations_Lines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Specialisations_Lines.Add(this);
						this._User_Id = value.User_ID;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _User_name;
		
		private string _User_Type;
		
		private System.Nullable<System.DateTime> _Creation_Date;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Email;
		
		private string _Street_Address;
		
		private string _City;
		
		private string _Zip_Code;
		
		private string _Country;
		
		private string _Phone_Number;
		
		private System.Nullable<bool> _Active_Status;
		
		private string _Password;
		
		private EntitySet<Project_Message_Line> _Project_Message_Lines;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Specialisations_Line> _Specialisations_Lines;
		
		private EntitySet<Invite> _Invites;
		
		private EntitySet<Consultant_Line> _Consultant_Lines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnUser_nameChanging(string value);
    partial void OnUser_nameChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    partial void OnCreation_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreation_DateChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStreet_AddressChanging(string value);
    partial void OnStreet_AddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnActive_StatusChanging(System.Nullable<bool> value);
    partial void OnActive_StatusChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Project_Message_Lines = new EntitySet<Project_Message_Line>(new Action<Project_Message_Line>(this.attach_Project_Message_Lines), new Action<Project_Message_Line>(this.detach_Project_Message_Lines));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Specialisations_Lines = new EntitySet<Specialisations_Line>(new Action<Specialisations_Line>(this.attach_Specialisations_Lines), new Action<Specialisations_Line>(this.detach_Specialisations_Lines));
			this._Invites = new EntitySet<Invite>(new Action<Invite>(this.attach_Invites), new Action<Invite>(this.detach_Invites));
			this._Consultant_Lines = new EntitySet<Consultant_Line>(new Action<Consultant_Line>(this.attach_Consultant_Lines), new Action<Consultant_Line>(this.detach_Consultant_Lines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_name
		{
			get
			{
				return this._User_name;
			}
			set
			{
				if ((this._User_name != value))
				{
					this.OnUser_nameChanging(value);
					this.SendPropertyChanging();
					this._User_name = value;
					this.SendPropertyChanged("User_name");
					this.OnUser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creation_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Creation_Date
		{
			get
			{
				return this._Creation_Date;
			}
			set
			{
				if ((this._Creation_Date != value))
				{
					this.OnCreation_DateChanging(value);
					this.SendPropertyChanging();
					this._Creation_Date = value;
					this.SendPropertyChanged("Creation_Date");
					this.OnCreation_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street_Address", DbType="VarChar(50)")]
		public string Street_Address
		{
			get
			{
				return this._Street_Address;
			}
			set
			{
				if ((this._Street_Address != value))
				{
					this.OnStreet_AddressChanging(value);
					this.SendPropertyChanging();
					this._Street_Address = value;
					this.SendPropertyChanged("Street_Address");
					this.OnStreet_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="VarChar(50)")]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(60)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="VarChar(50)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_Status", DbType="Bit")]
		public System.Nullable<bool> Active_Status
		{
			get
			{
				return this._Active_Status;
			}
			set
			{
				if ((this._Active_Status != value))
				{
					this.OnActive_StatusChanging(value);
					this.SendPropertyChanging();
					this._Active_Status = value;
					this.SendPropertyChanged("Active_Status");
					this.OnActive_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Project_Message_Line", Storage="_Project_Message_Lines", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Project_Message_Line> Project_Message_Lines
		{
			get
			{
				return this._Project_Message_Lines;
			}
			set
			{
				this._Project_Message_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Project", Storage="_Projects", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Specialisations_Line", Storage="_Specialisations_Lines", ThisKey="User_ID", OtherKey="User_Id")]
		public EntitySet<Specialisations_Line> Specialisations_Lines
		{
			get
			{
				return this._Specialisations_Lines;
			}
			set
			{
				this._Specialisations_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invite", Storage="_Invites", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Invite> Invites
		{
			get
			{
				return this._Invites;
			}
			set
			{
				this._Invites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Consultant_Line", Storage="_Consultant_Lines", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Consultant_Line> Consultant_Lines
		{
			get
			{
				return this._Consultant_Lines;
			}
			set
			{
				this._Consultant_Lines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Project_Message_Lines(Project_Message_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Project_Message_Lines(Project_Message_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Specialisations_Lines(Specialisations_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Specialisations_Lines(Specialisations_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Invites(Invite entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invites(Invite entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invites")]
	public partial class Invite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invite_ID;
		
		private int _Project_ID;
		
		private int _User_ID;
		
		private System.Nullable<System.DateTime> _Invite_Date;
		
		private string _Invite_status;
		
		private System.Nullable<System.DateTime> _Accept_date;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvite_IDChanging(int value);
    partial void OnInvite_IDChanged();
    partial void OnProject_IDChanging(int value);
    partial void OnProject_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnInvite_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvite_DateChanged();
    partial void OnInvite_statusChanging(string value);
    partial void OnInvite_statusChanged();
    partial void OnAccept_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccept_dateChanged();
    #endregion
		
		public Invite()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invite_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invite_ID
		{
			get
			{
				return this._Invite_ID;
			}
			set
			{
				if ((this._Invite_ID != value))
				{
					this.OnInvite_IDChanging(value);
					this.SendPropertyChanging();
					this._Invite_ID = value;
					this.SendPropertyChanged("Invite_ID");
					this.OnInvite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", DbType="Int NOT NULL")]
		public int Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invite_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Invite_Date
		{
			get
			{
				return this._Invite_Date;
			}
			set
			{
				if ((this._Invite_Date != value))
				{
					this.OnInvite_DateChanging(value);
					this.SendPropertyChanging();
					this._Invite_Date = value;
					this.SendPropertyChanged("Invite_Date");
					this.OnInvite_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invite_status", DbType="VarChar(25)")]
		public string Invite_status
		{
			get
			{
				return this._Invite_status;
			}
			set
			{
				if ((this._Invite_status != value))
				{
					this.OnInvite_statusChanging(value);
					this.SendPropertyChanging();
					this._Invite_status = value;
					this.SendPropertyChanged("Invite_status");
					this.OnInvite_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accept_date", DbType="Date")]
		public System.Nullable<System.DateTime> Accept_date
		{
			get
			{
				return this._Accept_date;
			}
			set
			{
				if ((this._Accept_date != value))
				{
					this.OnAccept_dateChanging(value);
					this.SendPropertyChanging();
					this._Accept_date = value;
					this.SendPropertyChanged("Accept_date");
					this.OnAccept_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Invite", Storage="_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Invites.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Invites.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invite", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invites.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invites.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultant_Line")]
	public partial class Consultant_Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Line_ID;
		
		private System.Nullable<int> _Project_ID;
		
		private System.Nullable<int> _User_ID;
		
		private System.Nullable<decimal> _Hourly_Rate;
		
		private System.Nullable<int> _Hours_total;
		
		private System.Nullable<int> _Invoice_ID;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLine_IDChanging(int value);
    partial void OnLine_IDChanged();
    partial void OnProject_IDChanging(System.Nullable<int> value);
    partial void OnProject_IDChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    partial void OnHourly_RateChanging(System.Nullable<decimal> value);
    partial void OnHourly_RateChanged();
    partial void OnHours_totalChanging(System.Nullable<int> value);
    partial void OnHours_totalChanged();
    partial void OnInvoice_IDChanging(System.Nullable<int> value);
    partial void OnInvoice_IDChanged();
    #endregion
		
		public Consultant_Line()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Line_ID
		{
			get
			{
				return this._Line_ID;
			}
			set
			{
				if ((this._Line_ID != value))
				{
					this.OnLine_IDChanging(value);
					this.SendPropertyChanging();
					this._Line_ID = value;
					this.SendPropertyChanged("Line_ID");
					this.OnLine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", DbType="Int")]
		public System.Nullable<int> Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hourly_Rate", DbType="Money")]
		public System.Nullable<decimal> Hourly_Rate
		{
			get
			{
				return this._Hourly_Rate;
			}
			set
			{
				if ((this._Hourly_Rate != value))
				{
					this.OnHourly_RateChanging(value);
					this.SendPropertyChanging();
					this._Hourly_Rate = value;
					this.SendPropertyChanged("Hourly_Rate");
					this.OnHourly_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours_total", DbType="Int")]
		public System.Nullable<int> Hours_total
		{
			get
			{
				return this._Hours_total;
			}
			set
			{
				if ((this._Hours_total != value))
				{
					this.OnHours_totalChanging(value);
					this.SendPropertyChanging();
					this._Hours_total = value;
					this.SendPropertyChanged("Hours_total");
					this.OnHours_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int")]
		public System.Nullable<int> Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Consultant_Line", Storage="_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Consultant_Lines.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Consultant_Lines.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Consultant_Line", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Consultant_Lines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Consultant_Lines.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Consultant_Line", Storage="_Invoice", ThisKey="Invoice_ID", OtherKey="Invoice_ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Consultant_Lines.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Consultant_Lines.Add(this);
						this._Invoice_ID = value.Invoice_ID;
					}
					else
					{
						this._Invoice_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_ID;
		
		private System.Nullable<int> _Project_ID;
		
		private System.Nullable<decimal> _Total_Price;
		
		private System.Nullable<System.DateTime> _Invoice_Date;
		
		private EntitySet<Consultant_Line> _Consultant_Lines;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnProject_IDChanging(System.Nullable<int> value);
    partial void OnProject_IDChanged();
    partial void OnTotal_PriceChanging(System.Nullable<decimal> value);
    partial void OnTotal_PriceChanged();
    partial void OnInvoice_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoice_DateChanged();
    #endregion
		
		public Invoice()
		{
			this._Consultant_Lines = new EntitySet<Consultant_Line>(new Action<Consultant_Line>(this.attach_Consultant_Lines), new Action<Consultant_Line>(this.detach_Consultant_Lines));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_ID", DbType="Int")]
		public System.Nullable<int> Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Int")]
		public System.Nullable<decimal> Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Invoice_Date
		{
			get
			{
				return this._Invoice_Date;
			}
			set
			{
				if ((this._Invoice_Date != value))
				{
					this.OnInvoice_DateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Date = value;
					this.SendPropertyChanged("Invoice_Date");
					this.OnInvoice_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Consultant_Line", Storage="_Consultant_Lines", ThisKey="Invoice_ID", OtherKey="Invoice_ID")]
		public EntitySet<Consultant_Line> Consultant_Lines
		{
			get
			{
				return this._Consultant_Lines;
			}
			set
			{
				this._Consultant_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Invoice", Storage="_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Consultant_Lines(Consultant_Line entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
}
#pragma warning restore 1591
